{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/e-commerce-frontend/src/components/PayButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { url } from \"../slices/api\";\nimport './PayButton.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PayButton = _ref => {\n  _s();\n\n  let {\n    cart,\n    currentCustomerId,\n    isLoggedIn,\n    token\n  } = _ref;\n  const [userID, setUserID] = useState(\"\");\n  useEffect(() => {\n    const fetchCustomerData = async () => {\n      const settings = {\n        credentials: \"include\"\n      };\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + `/customers/${currentCustomerId}`, settings);\n      const parsedRes = await response.json();\n\n      try {\n        if (response.ok) {\n          setUserID(currentCustomerId);\n        } else {\n          throw new Error(parsedRes.message);\n        }\n      } catch (err) {\n        alert(err.message);\n      }\n    };\n\n    fetchCustomerData();\n  }, [currentCustomerId]);\n\n  const handleCheckout = () => {\n    console.log('currentCustomerId', currentCustomerId);\n    console.log('userID', userID);\n    axios.post(`${url}/stripe/create-checkout-session`, {\n      cart,\n      userId: userID\n    }).then(res => {\n      if (res.data.url) {\n        window.location.href = res.data.url;\n      }\n    }).catch(err => {\n      console.log(err.message);\n    });\n    const now = new Date();\n    const tokenExpiry = new Date(now.getTime() + 1000 * 60 * 60);\n    localStorage.setItem(\"cartData\", JSON.stringify({\n      cart,\n      expiry: tokenExpiry.toISOString()\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pay payButton-item\",\n      onClick: handleCheckout,\n      children: [\" Check Out     \", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-brands pay-icon fa-cc-amazon-pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 89\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pay1 payButton-item1\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"pay2\",\n        to: \"/login\",\n        children: [\" Login First\", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-user-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 98\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayButton, \"ps9qAbFP5yPScFAAZBy2CvL3+YY=\");\n\n_c = PayButton;\nexport default PayButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayButton\");","map":{"version":3,"names":["React","useState","useEffect","axios","url","Link","PayButton","cart","currentCustomerId","isLoggedIn","token","userID","setUserID","fetchCustomerData","settings","credentials","response","fetch","process","env","REACT_APP_SERVER_URL","parsedRes","json","ok","Error","message","err","alert","handleCheckout","console","log","post","userId","then","res","data","window","location","href","catch","now","Date","tokenExpiry","getTime","localStorage","setItem","JSON","stringify","expiry","toISOString"],"sources":["/home/user/Documents/e-commerce-frontend/src/components/PayButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n import {url} from \"../slices/api\"\n import './PayButton.css'\n import {Link} from \"react-router-dom\"\n \n\n\nconst PayButton =({cart, currentCustomerId, isLoggedIn, token})=> {\nconst [userID, setUserID]= useState(\"\")\n\n  useEffect(() => {\n   \n       \n            const fetchCustomerData = async () => {\n                const settings = {\n                    credentials: \"include\"\n                }    \n                const response = await fetch(process.env.REACT_APP_SERVER_URL + `/customers/${currentCustomerId}`, settings);\n                const parsedRes = await response.json();            \n                try {\n                    if (response.ok) {\n                        setUserID(currentCustomerId)\n                    } else {\n                        throw new Error(parsedRes.message);\n                    }\n                } catch (err) {\n                    alert(err.message);\n                }\n            }\n    \n            fetchCustomerData();\n       \n \n}, [currentCustomerId])\n\n\n\n     \n    const handleCheckout=()=>{\n      console.log('currentCustomerId', currentCustomerId)\n      console.log('userID', userID)\n        axios.post(`${url}/stripe/create-checkout-session`, {\n            cart,\n            userId: userID\n\n        }).then((res)=>{\n            if(res.data.url){\n                window.location.href = res.data.url\n            }\n        }).catch((err)=>{\n            console.log(err.message)\n\n        })\n        const now = new Date();\n        const tokenExpiry = new Date(now.getTime() + 1000 * 60 * 60);\n\n       \n        localStorage.setItem(\"cartData\", JSON.stringify({ cart, expiry: tokenExpiry.toISOString() }));\n       \n\n    }\n  return (\n    <div>\n    { isLoggedIn ? (\n        <button className=\"pay payButton-item\"  onClick={handleCheckout}> Check Out     <i class=\"fa-brands pay-icon fa-cc-amazon-pay\"></i></button>)\n       : (\n        <button className=\"pay1 payButton-item1\"><Link className=\"pay2\"  to=\"/login\"> Login First<i class=\"fa-solid fa-user-lock\"></i></Link></button>\n       )\n\n       }\n    </div>\n  )\n}\n\nexport default PayButton\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}