{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/e-commerce-frontend/src/views/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Login.css\";\nimport PayButton from \"../components/PayButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    const getProducts = async () => {\n      const settings = {\n        credentials: \"include\"\n      };\n      const response = await fetch(process.env.REACT_APP_SERVER_URL + `/login`, settings);\n      const parsedRes = await response.json();\n\n      try {\n        if (response.ok) {\n          if (props.cart) {\n            /*#__PURE__*/\n            _jsxDEV(PayButton, {\n              cart: props.cart,\n              isLoggedIn: props.isLoggedIn,\n              currentCustomerId: props.currentCustomerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 11\n            }, this);\n          }\n        } else {\n          throw new Error(parsedRes.message);\n        }\n      } catch (err) {\n        alert(err.message);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const updateData = event => {\n    switch (event.target.name) {\n      case \"emailAddress\":\n        setEmailAddress(event.target.value);\n        break;\n\n      case \"password\":\n        setPassword(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const attemptLogin = async event => {\n    event.preventDefault();\n    const loginData = {\n      emailAddress: emailAddress,\n      password: password\n    };\n    const settings = {\n      method: \"POST\",\n      body: JSON.stringify(loginData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    };\n    const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/login\", settings);\n    const parsedRes = await response.json();\n\n    try {\n      if (response.ok) {\n        const now = new Date();\n        const tokenExpiry = new Date(now.getTime() + 1000 * 60 * 60);\n        localStorage.setItem(\"data\", JSON.stringify({\n          token: parsedRes.token,\n          id: parsedRes.id,\n          expiry: tokenExpiry.toISOString()\n        }));\n        props.login(parsedRes.token, parsedRes.id);\n      } else {\n        throw new Error(parsedRes.message);\n      }\n    } catch (err) {\n      alert(err.message);\n      setEmailAddress(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  const updateShowLogin = () => {\n    props.setShowLogin(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"login-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: attemptLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-email\",\n            name: \"emailAddress\",\n            onChange: updateData,\n            value: emailAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-password\",\n            name: \"password\",\n            type: \"password\",\n            onChange: updateData,\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-signin\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-signup\",\n        onClick: updateShowLogin,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"lE6cGcIOPypE6bhiUOK1wW2ZCLI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","PayButton","Login","props","emailAddress","setEmailAddress","password","setPassword","getProducts","settings","credentials","response","fetch","process","env","REACT_APP_SERVER_URL","parsedRes","json","ok","cart","isLoggedIn","currentCustomerId","Error","message","err","alert","updateData","event","target","name","value","attemptLogin","preventDefault","loginData","method","body","JSON","stringify","headers","now","Date","tokenExpiry","getTime","localStorage","setItem","token","id","expiry","toISOString","login","updateShowLogin","setShowLogin"],"sources":["/home/user/Documents/e-commerce-frontend/src/views/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Login.css\"\nimport PayButton from \"../components/PayButton\"\n\nconst Login = props => {\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n \n\n    \n  useEffect(  ()=>{\n    const getProducts = async () => {\n        \n  \n        const settings = {                \n            credentials: \"include\"\n        }\n        const response = await fetch(process.env.REACT_APP_SERVER_URL + `/login`, settings);\n            const parsedRes = await response.json();\n            try {\n                if (response.ok) {\n                  if(props.cart){\n          <PayButton cart ={props.cart} isLoggedIn = {props.isLoggedIn} currentCustomerId={props.currentCustomerId} />\n                  }\n                   \n                } else {\n                    throw new Error(parsedRes.message);\n                }\n            } catch (err) {\n                alert(err.message);\n            }\n    \n    }\n    getProducts();\n   }, [])\n\n\n\n\n\n\n  const updateData = event => {\n    switch (event.target.name) {\n      case \"emailAddress\":\n        setEmailAddress(event.target.value);\n        break;\n      case \"password\":\n        setPassword(event.target.value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const attemptLogin = async event => {\n    event.preventDefault();\n    const loginData = {\n      emailAddress: emailAddress,\n      password: password\n    }\n    const settings = {\n      method: \"POST\",\n      body: JSON.stringify(loginData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }\n\n    const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/login\", settings);\n    const parsedRes = await response.json();\n\n    try {\n      if (response.ok) {\n\n\n        const now = new Date();\n        const tokenExpiry = new Date(now.getTime() + 1000 * 60 * 60);\n\n       \n        localStorage.setItem(\"data\", JSON.stringify({ token: parsedRes.token, id: parsedRes.id, expiry: tokenExpiry.toISOString() }));\n        props.login(parsedRes.token, parsedRes.id);\n\n        \n       \n      } else {\n        throw new Error(parsedRes.message);\n      }\n    } catch (err) {\n      alert(err.message)\n      setEmailAddress(\"\");\n      setPassword(\"\");\n    }\n  }\n\n  const updateShowLogin = () => {\n    props.setShowLogin(false);\n  }\n\n  return (\n    \n    \n    <section className=\"login-main\">\n<h1 className=\"login-title\">Login</h1>\n\n\n<div className=\"login-container\">\n      \n\n      <form onSubmit={attemptLogin}>\n        <div className=\"email-login\">\n          <label className=\"login-label\">Email Address</label>\n          <input className=\"login-email\" name=\"emailAddress\" onChange={updateData} value={emailAddress} />\n        </div>\n        <div>\n          <label className=\"login-label\">Password</label>\n          <input className=\"login-password\" name=\"password\" type=\"password\" onChange={updateData} value={password} />\n        </div>\n\n        <button className=\"login-signin\">Sign In</button>\n      </form>\n\n      <button className=\"login-signup\" onClick={updateShowLogin}>Sign Up</button>\n\n\n      <div>\n      \n</div>\n    </div>\n    </section>\n    \n  )\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}